/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.gradleup.shadow' version '8.3.3'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = uri { "https://download.libvirt.org/maven2" }
    }
    maven {
        url = uri { "https://jitpack.io" }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.libvirt:libvirt:0.5.3'
    implementation 'net.java.dev.jna:jna:5.15.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.5'
    implementation 'com.github.pcdv.flak:flak-api:2.8.0'
    implementation 'com.github.pcdv.flak:flak-backend-jdk:2.8.0'
    implementation 'com.github.pcdv.flak:flak-jackson:2.8.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'net.asaken1021.vmmanager.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}